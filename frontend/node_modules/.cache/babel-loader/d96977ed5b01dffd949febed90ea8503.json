{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriyburdejnyy/Arhio/COMERCICAL/excel-to-word-converter/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Button, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FileUploader from './components/FileUploader';\nimport { convertExcelToWord } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    marginTop: theme.spacing(2)\n  }\n}));\nfunction App() {\n  _s();\n  const classes = useStyles();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = selectedFile => {\n    setFile(selectedFile);\n  };\n  const handleConvert = async () => {\n    if (!file) {\n      alert('Пожалуйста, выберите файл Excel');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await convertExcelToWord(file);\n      const blob = new Blob([response.data], {\n        type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'converted.docx';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Ошибка при конвертации:', error);\n      alert('Произошла ошибка при конвертации файла');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\u041A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0435\\u0440 Excel \\u0432 Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onFileChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleConvert,\n      disabled: !file || loading,\n      className: classes.button,\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this) : 'Конвертировать'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MVRARiRaUxGEkMxfarpdB8Bodsc=\", false, function () {\n  return [useStyles];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","Button","CircularProgress","makeStyles","FileUploader","convertExcelToWord","jsxDEV","_jsxDEV","useStyles","theme","container","marginTop","spacing","display","flexDirection","alignItems","button","App","_s","classes","file","setFile","loading","setLoading","handleFileChange","selectedFile","handleConvert","alert","response","blob","Blob","data","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","error","console","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onFileChange","color","onClick","disabled","size","_c","$RefreshReg$"],"sources":["/Users/dmitriyburdejnyy/Arhio/COMERCICAL/excel-to-word-converter/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, Button, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FileUploader from './components/FileUploader';\nimport { convertExcelToWord } from './services/api';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (selectedFile) => {\n    setFile(selectedFile);\n  };\n\n  const handleConvert = async () => {\n    if (!file) {\n      alert('Пожалуйста, выберите файл Excel');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const response = await convertExcelToWord(file);\n      const blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'converted.docx';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Ошибка при конвертации:', error);\n      alert('Произошла ошибка при конвертации файла');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container className={classes.container}>\n      <Typography variant=\"h4\" gutterBottom>\n        Конвертер Excel в Word\n      </Typography>\n      <FileUploader onFileChange={handleFileChange} />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleConvert}\n        disabled={!file || loading}\n        className={classes.button}\n      >\n        {loading ? <CircularProgress size={24} /> : 'Конвертировать'}\n      </Button>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}