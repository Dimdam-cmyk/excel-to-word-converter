{"version":3,"sources":["components/FileUploader.js","services/api.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","input","display","FileUploader","_ref","onFileChange","classes","_jsxs","children","_jsx","accept","className","id","type","onChange","event","file","target","files","htmlFor","Button","variant","color","component","API_URL","process","REACT_APP_API_URL","container","marginTop","spacing","flexDirection","alignItems","button","checkbox","discountInput","width","Alert","props","MuiAlert","elevation","App","setFile","useState","loading","setLoading","error","setError","applyDiscount","setApplyDiscount","discountPercentage","setDiscountPercentage","makeShortVersion","setMakeShortVersion","handleCloseError","reason","Container","Typography","gutterBottom","selectedFile","console","log","name","Checkbox","checked","e","TextField","label","value","size","onClick","async","response","formData","FormData","append","axios","post","headers","responseType","withCredentials","errorMessage","TextDecoder","decode","data","Error","convertExcelToWord","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","_error$response","disabled","CircularProgress","Snackbar","open","autoHideDuration","onClose","severity","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"+RAIA,MAAMA,EAAYC,aAAYC,IAAK,CACjCC,MAAO,CACLC,QAAS,YA8BEC,MA1Bf,SAAqBC,GAAoB,IAAnB,aAAEC,GAAcD,EACpC,MAAME,EAAUR,IAOhB,OACES,eAAA,OAAAC,SAAA,CACEC,cAAA,SACEC,OAAO,aACPC,UAAWL,EAAQL,MACnBW,GAAG,wBACHC,KAAK,OACLC,SAZoBC,IACxB,MAAMC,EAAOD,EAAME,OAAOC,MAAM,GAChCb,EAAaW,EAAK,IAYhBP,cAAA,SAAOU,QAAQ,wBAAuBX,SACpCC,cAACW,IAAM,CAACC,QAAQ,YAAYC,MAAM,UAAUC,UAAU,OAAMf,SAAC,kFAMrE,E,iBChCA,MAAMgB,EAAUC,mIAAYC,mBAAqB,iCCK3C5B,EAAYC,aAAYC,IAAK,CACjC2B,UAAW,CACTC,UAAW5B,EAAM6B,QAAQ,GACzB3B,QAAS,OACT4B,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNJ,UAAW5B,EAAM6B,QAAQ,IAE3BI,SAAU,CACRL,UAAW5B,EAAM6B,QAAQ,IAE3BK,cAAe,CACbN,UAAW5B,EAAM6B,QAAQ,GACzBM,MAAO,YAIX,SAASC,EAAMC,GACb,OAAO5B,cAAC6B,IAAQ,CAACC,UAAW,EAAGlB,QAAQ,YAAagB,GACtD,CAwGeG,MAtGf,WACE,MAAMlC,EAAUR,KACTkB,EAAMyB,GAAWC,mBAAS,OAC1BC,EAASC,GAAcF,oBAAS,IAChCG,EAAOC,GAAYJ,mBAAS,OAC5BK,EAAeC,GAAoBN,oBAAS,IAC5CO,EAAoBC,GAAyBR,mBAAS,KACtDS,EAAkBC,GAAuBV,oBAAS,GAqCnDW,EAAmBA,CAACtC,EAAOuC,KAChB,cAAXA,GAGJR,EAAS,KAAK,EAGhB,OACEvC,eAACgD,IAAS,CAAC5C,UAAWL,EAAQqB,UAAUnB,SAAA,CACtCC,cAAC+C,IAAU,CAACnC,QAAQ,KAAKoC,cAAY,EAAAjD,SAAC,6EAGtCC,cAACN,EAAY,CAACE,aA/CQqD,IACxBC,QAAQC,IAAI,iEAAgBF,EAAaG,MACzCpB,EAAQiB,EAAa,IA8CnBnD,eAAA,OAAKI,UAAWL,EAAQ2B,SAASzB,SAAA,CAC/BC,cAACqD,IAAQ,CACPC,QAAShB,EACTjC,SAAWkD,GAAMhB,EAAiBgB,EAAE/C,OAAO8C,SAC3CzC,MAAM,YAERb,cAAC+C,IAAU,CAACjC,UAAU,OAAMf,SAAC,6FAE9BuC,GACCtC,cAACwD,IAAS,CACRtD,UAAWL,EAAQ4B,cACnBgC,MAAM,kFACNrD,KAAK,SACLsD,MAAOlB,EACPnC,SAAWkD,GAAMd,EAAsBc,EAAE/C,OAAOkD,OAChD9C,QAAQ,WACR+C,KAAK,UAGT7D,eAAA,OAAKI,UAAWL,EAAQ2B,SAASzB,SAAA,CAC/BC,cAACqD,IAAQ,CACPC,QAASZ,EACTrC,SAAWkD,GAAMZ,EAAoBY,EAAE/C,OAAO8C,SAC9CzC,MAAM,YAERb,cAAC+C,IAAU,CAACjC,UAAU,OAAMf,SAAC,qGAE/BC,cAACW,IAAM,CACLC,QAAQ,YACRC,MAAM,UACN+C,QAzEgBC,UACpB,GAAKtD,EAAL,CAKA4B,GAAW,GACXE,EAAS,MAET,IACEa,QAAQC,IAAI,0IAA6B5C,EAAK6C,MAC9C,MAAMU,ODnDsBD,OAAOtD,EAAMiC,EAAoBE,KACjE,MAAMqB,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ1D,GACxBwD,EAASE,OAAO,mBAAoB1D,EAAK6C,MACd,OAAvBZ,GACFuB,EAASE,OAAO,qBAAsBzB,GAExCuB,EAASE,OAAO,mBAAoBvB,GAEpC,IAQE,aAPuBwB,IAAMC,KAAK,GAAGpD,YAAmBgD,EAAU,CAChEK,QAAS,CACP,eAAgB,uBAElBC,aAAc,cACdC,iBAAiB,GAGrB,CAAE,MAAOlC,GACP,GAAIA,EAAM0B,SAAU,CAClB,MAAMS,GAAe,IAAIC,aAAcC,OAAOrC,EAAM0B,SAASY,MAC7D,MAAM,IAAIC,MAAMJ,EAClB,CACA,MAAMnC,CACR,GC2B2BwC,CAAmBrE,EAAM+B,EAAgBE,EAAqB,KAAME,GAC3FQ,QAAQC,IAAI,6EAAkBW,GAE9B,MAAMe,EAAO,IAAIC,KAAK,CAAChB,EAASY,MAAO,CAAEtE,KAAM,4EACzC2E,EAAMC,OAAOC,IAAIC,gBAAgBL,GACjCM,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAOP,EACTI,EAAEI,SAAW,iBACbJ,EAAEK,QACFR,OAAOC,IAAIQ,gBAAgBV,GAC3B7B,QAAQC,IAAI,uMACd,CAAE,MAAOf,GAAQ,IAADsD,EACdxC,QAAQd,MAAM,8HAA2BA,GACzCC,GAAuB,QAAdqD,EAAAtD,EAAM0B,gBAAQ,IAAA4B,OAAA,EAAdA,EAAgBhB,OAAQ,mNACnC,CAAC,QACCvC,GAAW,EACb,CAvBA,MAFEE,EAAS,gJAyBX,EA+CIsD,UAAWpF,GAAQ2B,EACnBhC,UAAWL,EAAQ0B,OAAOxB,SAEzBmC,EAAUlC,cAAC4F,IAAgB,CAACjC,KAAM,KAAS,yFAE9C3D,cAAC6F,IAAQ,CAACC,OAAQ1D,EAAO2D,iBAAkB,IAAMC,QAASpD,EAAiB7C,SACzEC,cAAC2B,EAAK,CAACqE,QAASpD,EAAkBqD,SAAS,QAAOlG,SAC/CqC,QAKX,EC9HA8D,IAASC,OACPnG,cAACoG,IAAMC,WAAU,CAAAtG,SACfC,cAAC+B,EAAG,MAENqD,SAASkB,eAAe,Q","file":"static/js/main.5859b1ac.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    display: 'none',\n  },\n}));\n\nfunction FileUploader({ onFileChange }) {\n  const classes = useStyles();\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    onFileChange(file);\n  };\n\n  return (\n    <div>\n      <input\n        accept=\".xlsx,.xls\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        type=\"file\"\n        onChange={handleFileChange}\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button variant=\"contained\" color=\"default\" component=\"span\">\n          Выбрать Excel файл\n        </Button>\n      </label>\n    </div>\n  );\n}\n\nexport default FileUploader;\n","import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://176.124.219.69:5001/api';\n\nexport const convertExcelToWord = async (file, discountPercentage, makeShortVersion) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('originalFileName', file.name);\n  if (discountPercentage !== null) {\n    formData.append('discountPercentage', discountPercentage);\n  }\n  formData.append('makeShortVersion', makeShortVersion);\n\n  try {\n    const response = await axios.post(`${API_URL}/convert`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      responseType: 'arraybuffer',\n      withCredentials: true\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      const errorMessage = new TextDecoder().decode(error.response.data);\n      throw new Error(errorMessage);\n    }\n    throw error;\n  }\n};\n","import React, { useState } from 'react';\nimport { Container, Typography, Button, CircularProgress, Snackbar, Checkbox, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport FileUploader from './components/FileUploader';\nimport { convertExcelToWord } from './services/api';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n  checkbox: {\n    marginTop: theme.spacing(2),\n  },\n  discountInput: {\n    marginTop: theme.spacing(2),\n    width: '100%',\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [applyDiscount, setApplyDiscount] = useState(false);\n  const [discountPercentage, setDiscountPercentage] = useState('');\n  const [makeShortVersion, setMakeShortVersion] = useState(false);\n\n  const handleFileChange = (selectedFile) => {\n    console.log('Файл выбран:', selectedFile.name);\n    setFile(selectedFile);\n  };\n\n  const handleConvert = async () => {\n    if (!file) {\n      setError('Пожалуйста, выберите файл Excel');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      console.log('Начало конвертации файла:', file.name);\n      const response = await convertExcelToWord(file, applyDiscount ? discountPercentage : null, makeShortVersion);\n      console.log('Ответ получен:', response);\n\n      const blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'converted.docx';\n      a.click();\n      window.URL.revokeObjectURL(url);\n      console.log('Файл успешно сконвертирован и скачан');\n    } catch (error) {\n      console.error('Ошибка при конвертации:', error);\n      setError(error.response?.data || 'Произошла ошибка при конвертации файла');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCloseError = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(null);\n  };\n\n  return (\n    <Container className={classes.container}>\n      <Typography variant=\"h4\" gutterBottom>\n        Конвертер Excel в Word\n      </Typography>\n      <FileUploader onFileChange={handleFileChange} />\n      <div className={classes.checkbox}>\n        <Checkbox\n          checked={applyDiscount}\n          onChange={(e) => setApplyDiscount(e.target.checked)}\n          color=\"primary\"\n        />\n        <Typography component=\"span\">Добавить скидку</Typography>\n      </div>\n      {applyDiscount && (\n        <TextField\n          className={classes.discountInput}\n          label=\"Процент скидки\"\n          type=\"number\"\n          value={discountPercentage}\n          onChange={(e) => setDiscountPercentage(e.target.value)}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n      )}\n      <div className={classes.checkbox}>\n        <Checkbox\n          checked={makeShortVersion}\n          onChange={(e) => setMakeShortVersion(e.target.checked)}\n          color=\"primary\"\n        />\n        <Typography component=\"span\">Сделать сокращ. КП</Typography>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleConvert}\n        disabled={!file || loading}\n        className={classes.button}\n      >\n        {loading ? <CircularProgress size={24} /> : 'Конвертировать'}\n      </Button>\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={handleCloseError}>\n        <Alert onClose={handleCloseError} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}